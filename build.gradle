buildscript {
	repositories {
		jcenter()
		mavenCentral()
		maven {
			url = uri("https://packages.confluent.io/maven/")
		}
		maven {
			url = uri("https://plugins.gradle.org/m2/")
		}
		maven {
			url = uri("https://jitpack.io")
		}
	}
	dependencies {
		classpath "gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'idea'
	id "com.github.davidmc24.gradle.plugin.avro" version "1.3.0"
}

group = 'io.confluent.developer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	jcenter()
	mavenCentral()
	maven {
		url = uri("https://packages.confluent.io/maven/")
	}
	maven {
		url = uri("https://jitpack.io")
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.avro:avro:1.11.0'
	implementation "io.confluent:kafka-avro-serializer:7.1.1"
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
